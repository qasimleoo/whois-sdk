# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .api_credits import ApiCredits
from .api_subscription import ApiSubscription


class CreditsResponse(UniversalBaseModel):
    api_key: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="apiKey")] = None
    api_credits: typing_extensions.Annotated[typing.Optional[ApiCredits], FieldMetadata(alias="apiCredits")] = None
    api_subscription: typing_extensions.Annotated[
        typing.Optional[ApiSubscription], FieldMetadata(alias="apiSubscription")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
