# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class DnsRecord(UniversalBaseModel):
    name: typing.Optional[str] = None
    type: typing.Optional[int] = None
    dns_type: typing.Optional[str] = None
    ttl: typing.Optional[int] = None
    raw_text: typing.Optional[str] = None
    rrset_type: typing.Optional[int] = None
    single_name: typing.Optional[str] = None
    address: typing.Optional[str] = None
    target: typing.Optional[str] = None
    priority: typing.Optional[int] = None
    admin: typing.Optional[str] = None
    host: typing.Optional[str] = None
    expire: typing.Optional[int] = None
    minimum: typing.Optional[int] = None
    refresh: typing.Optional[int] = None
    retry: typing.Optional[int] = None
    serial: typing.Optional[int] = None
    strings: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
