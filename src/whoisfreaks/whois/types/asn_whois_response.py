# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .as_block import AsBlock
from .asn_contact import AsnContact
from .asn_organization import AsnOrganization
from .aut_num import AutNum
from .status import Status


class AsnWhoisResponse(UniversalBaseModel):
    status: typing.Optional[Status] = None
    as_number: typing.Optional[str] = None
    query_time: typing.Optional[str] = None
    whois_server: typing.Optional[str] = None
    as_blocks: typing.Optional[typing.List[AsBlock]] = None
    aut_nums: typing.Optional[typing.List[AutNum]] = None
    organization: typing.Optional[AsnOrganization] = None
    administrative_contacts: typing.Optional[typing.List[AsnContact]] = None
    technical_contacts: typing.Optional[typing.List[AsnContact]] = None
    whois_raw_response: typing.Optional[str] = None
    timestamp: typing.Optional[str] = None
    error: typing.Optional[str] = None
    message: typing.Optional[str] = None
    path: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
