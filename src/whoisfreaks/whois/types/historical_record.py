# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .contact import Contact
from .domain_registrar import DomainRegistrar
from .registry_data import RegistryData
from .reseller_contact import ResellerContact


class HistoricalRecord(UniversalBaseModel):
    num: int
    status: bool
    domain_name: str
    query_time: typing.Optional[str] = None
    whois_server: typing.Optional[str] = None
    create_date: typing.Optional[str] = None
    update_date: typing.Optional[str] = None
    expiry_date: typing.Optional[str] = None
    domain_registrar: typing.Optional[DomainRegistrar] = None
    reseller_contact: typing.Optional[ResellerContact] = None
    registrant_contact: typing.Optional[Contact] = None
    administrative_contact: typing.Optional[Contact] = None
    technical_contact: typing.Optional[Contact] = None
    billing_contact: typing.Optional[Contact] = None
    name_servers: typing.Optional[typing.List[str]] = None
    domain_status: typing.Optional[typing.List[str]] = None
    registry_data: typing.Optional[RegistryData] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
