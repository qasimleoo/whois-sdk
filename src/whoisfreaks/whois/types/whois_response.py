# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata


class WhoisResponse(UniversalBaseModel):
    domain_name: typing_extensions.Annotated[str, FieldMetadata(alias="domainName")]
    registrar: typing.Optional[str] = None
    creation_date: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="creationDate")] = None
    expiration_date: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="expirationDate")] = None
    updated_date: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="updatedDate")] = None
    nameservers: typing.Optional[typing.List[str]] = None
    status: typing.Optional[typing.List[str]] = None
    raw_response: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="rawResponse")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
